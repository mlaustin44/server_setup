---
- hosts: proxmox_server
  gather_facts: False
  vars:
    lxc_id: "102"
    lxc_template: "ubuntu-18.04-standard_18.04.1-1_amd64.tar.gz"
    lxc_hostname: "pihole"
    ip_addr: "192.168.1.2"

  tasks:
    - name: Download the Ubuntu 18.04 container template
      shell: pveam download local {{ lxc_template }}
      ignore_errors: true

    - name: Copy SSH key to proxmox server
      copy:
        src: /home/mlaustin/.ssh/server_key.pub
        dest: /tmp/key.pub

    - name: Create pihole LXC
      shell: >
        pct create {{ lxc_id }} local:vztmpl/{{ lxc_template }}
        --arch amd64 
        --cores 1 
        --hostname "{{ lxc_hostname }}"
        --cpulimit 1
        --memory 512
        --net0 name=eth0,bridge=vmbr0,firewall=1,gw=192.168.1.1,ip={{ ip_addr }}/24,type=veth
        --ostype ubuntu
        --rootfs vmstorage:4
        --swap 256
        --unprivileged 1
        --onboot 1
        --startup order=1
        --ssh-public-keys /tmp/key.pub

    - name: Start pihole container
      shell: pct start "{{ lxc_id }}"

    - name: Wait 30 seconds for container to start
      wait_for:
        timeout: 30
        
- hosts: pihole_lxc
  gather_facts: false
  tasks:
    - name: Install required packages
      apt:
        update_cache: yes
        name: ['debconf-utils', 'curl', 'wget']
    
    - name: Update packages
      apt:    
        upgrade: dist

    - name: Configure Ubuntu to restart without prompting during upgrade
      shell: |
        debconf-get-selections | grep libssl1.0.0:amd64
        echo '* libraries/restart-without-asking boolean true' | sudo debconf-set-selections
      become: true

    - name: Download pihole install script to container
      get_url:
        url: https://install.pi-hole.net
        dest: ~/install-pihole.sh
      
    - name: Make pihole script executable
      file: dest=~/install-pihole.sh mode=a+x

    - name: Create pihole configuration directory on container
      file:
        path: /etc/pihole
        state: directory

    - name: Push pihole config file to container
      copy:
        src: files/pihole-config
        dest: /etc/pihole/setupVars.conf

    - name: Install pihole on container
      shell: ~/install-pihole.sh --unattended

    - name: Configure pihole to update weekly
      shell: sed 's/^#(.*updatePihole.*)$/\1' /etc/cron.d/pihole

    - name: Download cloudflared (for dns over https)
      get_url:
        url: https://bin.equinox.io/c/VdrWdbjqyF/cloudflared-stable-linux-amd64.deb
        dest: ~/cloudflared-stable-linux-amd64.deb

    - name: Create cloudflared configuration directory
      file:
        path: /etc/cloudflared
        state: directory

    - name: Copy cloudflared config to remote
      copy:
        src: files/cloudflared-config.yml
        dest: /etc/cloudflared/config.yml

    - name: Install cloudflared service
      shell: cloudflared service install

    - name: Start cloudflared service
      service:
        name: cloudflared
        state: started
      
    - name: Install cloudflared
      apt:
        deb: ~/cloudflared-stable-linux-amd64.deb

    - name: Reboot container
      shell: pct reboot "{{ lxc_id }}"
