---
- hosts: proxmox_server
  gather_facts: False
  vars:
    id_list:
      - "stormfather"
      - "skybreaker"
      - "dustbringer"
    id_stg_list:
      - { id: "4010", stg: "PureLake" }
      - { id: "40100", stg: "PureLake" }
      - { id: "40101", stg: "PureLake" }
    hns:
      - "stormfather"
      - "skybreaker"
      - "dustbringer"
    net_bridge: vmbr0
    net_gw: "192.168.40.1"
    net_dns: "192.168.1.1"
    net_sd: "roshar"
    k8s_ssh_key: "/root/.ssh/roshar.k8s.pub"

  tasks:
    - name: Create resource pool for k8s VMs
      shell: pvesh create /pools -poolid "kubernetes"
      ignore_errors: yes

    - name: Download Fedora CoreOS qcow2 image
      get_url:
        url: "https://builds.coreos.fedoraproject.org/prod/streams/stable/builds/32.20200715.3.0/x86_64/fedora-coreos-32.20200715.3.0-openstack.x86_64.qcow2.xz"
        dest: "/tmp/image.qcow2.xz"
    
    - name: Install xz utils
      shell: apt-get install -y xz-utils
      ignore_errors: yes

    - name: Extract Fedora CoreOS qcow2 image
      shell: xz -d /tmp/image.qcow2.xz

    - name: Create the Kubernetes VMs
      shell: >
        qm create {{ item.id }}
        --pool {{ Kubernetes }}
        --ostype "l26"
        --name {{ item.name }}
        --description "Kubernetes VM"
        --agent 1
        --cores {{ item.cpu }}
        --memory {{ item.mem }}
        --net0 "virio,bridge={{ net_bridge }}"
        --ipconfig "gw={{ net_gw }},ip={{ item.ip }}"
        --nameserver {{ net_dns }}
        --searchdomain {{ net_sd }}
        --sshkeys {{ k8s_ssh_key }}
      with_items:
        - {id: "4010", name: "stormfather", cpu: '2', mem: '8192', ip: '192.168.40.10'}
        - {id: "40100", name: "skybreaker", cpu: '2', mem: '8192', ip: '192.168.40.100'}
        - {id: "40102", name: "dustbringer", cpu: '2', mem: '8192', ip: '192.168.40.101'}

    - name: Import the Fedore CoreOS QCow2 image as a disk for each VM
      shell: qm importdisk {{ item.id }} {{ /tmp/image.qcow2 }} {{ item.stg }}
      with_items: "{{ id_stg_list }}"

    - name: Configure the VM disk hardware
      shell: >
        qm set {{ item.id }}
        --scsihw virtio-scsi-pci
        --scsi0 {{ item.stg }}:vm-{{ item.id }}-disk-0
        --ide2 {{ item.stg }}:cloudinit
        --serial0 /dev/tty0
        --boot c
        --bootdisk scsi0

    - name: Resize VM disks to 20gb
      shell: qm resize {{ item.id }} scsi0 20G
      with_items: "{{ id_stg_list }}"

    - name: Start the VMs
      shell: qm start {{ item.id }}
      with_items: "{{ id_stg_list }}"

    - name: Wait for VMs to be available
      wait_for:
        host: "{{ item }}"
        port: 22
        msg: "VMs not available after 5 minutes"
      with_items: "{{ hns }}"

    