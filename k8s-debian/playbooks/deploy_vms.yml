---
- hosts: proxmox_server
  gather_facts: false
  vars:
    stg: "vmstorage"
    nodes:
      - {id: "4010", name: "stormfather", cpu: '2', mem: '8192', ip: '192.168.40.10'}
      - {id: "40100", name: "windrunner", cpu: '1', mem: '4096', ip: '192.168.40.100'}
      - {id: "40101", name: "lightweaver", cpu: '1', mem: '4096', ip: '192.168.40.101'}
      - {id: "40102", name: "edgedancer", cpu: '1', mem: '4096', ip: '192.168.40.102'}
    net_bridge: vmbr1
    net_gw: "192.168.40.1"
    net_dns: "192.168.1.1"
    vlan_tag: 40

  tasks:
    - name: Create resource pool for k8s VMs
      shell: pvesh create /pools -poolid "kubernetes"
      ignore_errors: yes
    
    - name: Download Ubuntu Server 20.04 kvm image
      get_url:
        url: https://cdimage.debian.org/cdimage/openstack/current-10/debian-10-openstack-amd64.qcow2
        dest: /tmp/debian-10-openstack-amd64.qcow2

    - name: Copy SSH key to proxmox server
      copy:
        src: /home/mlaustin/.ssh/server_key.pub
        dest: /tmp/key.pub

    - name: Create the k8s vms
      shell: >
        qm create {{ item.id }}
        --pool kubernetes
        --ostype l26
        --name {{ item.name }}
        --description "Kubernetes Node VM"
        --agent 1
        --cores {{ item.cpu }}
        --memory {{ item.mem }}
        --net0 virtio,bridge={{ net_bridge }},tag={{ vlan_tag }}
        --ipconfig0 gw={{ net_gw }},ip={{ item.ip }}/24
        --sshkeys /tmp/key.pub
      with_items: "{{ nodes }}"

    - name: Import qcow2 image as a disk to each VM
      shell: qm importdisk {{ item.id }} /tmp/debian-10-openstack-amd64.qcow2 {{ stg }}
      with_items: "{{ nodes }}"

    - name: Configure the VM disk hardware
      shell: >
        qm set {{ item.id }}
        --scsihw virtio-scsi-pci
        --scsi0 {{ stg }}:vm-{{ item.id }}-disk-0
        --ide2 "{{ stg }}:cloudinit"
        --serial0 /dev/tty0
        --boot c
        --bootdisk scsi0
      with_items: "{{ nodes }}"

    - name: Resize VM disks
      shell: qm resize {{ item.id }} scsi0 20G
      with_items: "{{ nodes }}"



    - name: Start the VMs
      shell: qm start {{ item.id }}
      with_items: "{{ nodes }}"

    - name: Wait for VMs to be available
      wait_for:
        host: "{{ item.ip }}"
        port: 22
        msg: "VMs not available after 5 minutes"
      with_items: "{{ nodes }}"