---
#- hosts: k8s_master:k8s_nodes
- hosts: all
  gather_facts: False
  vars:
    CNI_VERSION: "v0.8.2"
    CRICTL_VERSION: "v1.17.0"
    KUBEADM_VERSION: "v1.18.6"
    KUBE_RELEASE_VERSION: "v0.2.7"
  tasks:
    - name: Install Python using raw command
      raw: sudo rpm-ostree install python
      ignore_errors: yes

    - name: Install selinux python using raw command
      raw: sudo rpm-ostree install libselinux-python3
      ignore_errors: yes

    - name: Reboot VM and wait for reconnect
      block:
        - name: Send raw systemctl command to reboot
          raw: sudo systemctl reboot
        - name: Wait for connection to come back up
          wait_for_connection:
            delay: 15
            timeout: 120

    - name: Create CNI folder
      file:
        path: /opt/cni/bin
        state: directory
        mode: '0777'
      become: true

    - name: Download CNI plugins
      get_url:
        url: "https://github.com/containernetworking/plugins/releases/download/{{ CNI_VERSION }}/cni-plugins-linux-amd64-{{ CNI_VERSION }}.tgz"
        dest: /tmp/cni_plugins.tgz

    - name: Extract CNI plugins to CNI folder
      unarchive:
        src: /tmp/cni_plugins.tgz
        dest: /opt/cni/bin
        remote_src: yes
      become: true

    - name: Create command directory
      file:
        path: /usr/local/bin
        state: directory
        mode: '0777'
      become: true

    - name: Download crictl
      get_url:
        url: "https://github.com/kubernetes-sigs/cri-tools/releases/download/{{ CRICTL_VERSION }}/crictl-{{ CRICTL_VERSION }}-linux-amd64.tar.gz"
        dest: /tmp/crictl.tar.gz

    - name: Extract crictl to command directory
      unarchive:
        src: /tmp/crictl.tar.gz
        dest: /usr/local/bin
        remote_src: yes

    - name: Download kubeadm, kubelet, and kubectl
      get_url:
        url: "https://storage.googleapis.com/kubernetes-release/release/{{ KUBEADM_VERSION }}/bin/linux/amd64/{{ item }}"
        dest: "/usr/local/bin/{{ item }}"
      with_items:
        - kubeadm
        - kubelet
        - kubectl

    - name: Make kubeadm, kubelet, and kubectl executable     
      file: dest="/usr/local/bin/{{ item }}" mode=a+x
      with_items:
        - kubeadm
        - kubelet
        - kubectl

    - name: Download kubelet service
      get_url:
        url: "https://raw.githubusercontent.com/kubernetes/release/{{ KUBE_RELEASE_VERSION }}/cmd/kubepkg/templates/latest/deb/kubelet/lib/systemd/system/kubelet.service"
        dest: /tmp/kubelet.service

    - name: Modify references in kubelet service to use /usr/local/bin path
      replace:
        path: /tmp/kubelet.service
        regexp: 's:/usr/bin'
        replace: '/usr/local/bin'

    - name: Move kubelet service to service directory
      copy:
        src: /tmp/kubelet.service
        dest: /etc/systemd/system/kubelet.service
        remote_src: yes
      become: true

    - name: Create kubelet service directory
      file:
        path: /etc/systemd/system/kubelet.service.d
        state: directory
        mode: '0777'
      become: true

    - name: Download kubeadm config
      get_url:
        url: "https://raw.githubusercontent.com/kubernetes/release/{{ KUBE_RELEASE_VERSION }}/cmd/kubepkg/templates/latest/deb/kubeadm/10-kubeadm.conf"  
        dest: /tmp/10-kubeadm.conf

    - name: Modify references in kubeadm config to use /usr/local/bin path
      replace:
        path: /tmp/10-kubeadm.conf
        regexp: '/usr/bin'
        replace: '/usr/local/bin'

    - name: Move kubeadm config to systemd
      copy:
        src: /tmp/10-kubeadm.conf
        dest: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
        remote_src: yes
      become: true